services:
  test-postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=test_admin_db
    ports:
      - '5433:5432'
    networks:
      - test-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5

  test-frontend-db:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=test_frontend_db
      - MYSQL_USER=user
      - MYSQL_PASSWORD=password
    ports:
      - '3307:3306'
    networks:
      - test-network
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
      interval: 5s
      timeout: 5s
      retries: 5

  test-redis:
    image: redis:alpine
    ports:
      - '16380:6379'
    networks:
      - test-network

  test-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
    environment:
      - DATABASE_URL=mysql://user:password@test-frontend-db:3306/test_frontend_db
      - REDIS_URL=redis://test-redis:6379/0
      - PYTHONPATH=/app
    depends_on:
      test-frontend-db:
        condition: service_healthy
      test-redis:
        condition: service_started
    networks:
      - test-network
    working_dir: /app
    command: pytest -v

  test-admin:
    build:
      context: ./admin
      dockerfile: Dockerfile
    volumes:
      - ./admin:/app
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@test-postgres:5432/test_admin_db
      - REDIS_URL=redis://test-redis:6379/0
      - PYTHONPATH=/app
    depends_on:
      test-postgres:
        condition: service_healthy
      test-redis:
        condition: service_started
    networks:
      - test-network
    working_dir: /app
    command: pytest -v

networks:
  test-network:
    name: test-network
    driver: bridge
